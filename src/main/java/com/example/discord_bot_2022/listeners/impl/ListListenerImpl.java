package com.example.discord_bot_2022.listeners.impl;

import com.example.discord_bot_2022.listeners.ListListener;
import org.javacord.api.entity.message.embed.EmbedBuilder;
import org.javacord.api.event.message.MessageCreateEvent;
import org.springframework.stereotype.Component;

import java.util.*;

@Component
public class ListListenerImpl implements ListListener {
    @Override
    public void onMessageCreate(MessageCreateEvent messageCreateEvent) {
        String msg = messageCreateEvent.getMessageContent();
        if(msg.toLowerCase().contains("!list")){
            if (msg.equalsIgnoreCase("!list")){
                messageCreateEvent.getChannel().sendMessage("`Please try again`");

            }
            else {
                String[] temp = msg.toLowerCase().replace("!list ", "").split(" ");

                List<String> tempList = new ArrayList<>(Arrays.asList(temp).subList(0, temp.length));
                List<String> newList = new ArrayList<>();
                Random rand = new Random();
                int listSize = tempList.size();

                String output = "";
                for (int i = 0; i < listSize; i++) {
                    int randomIndex = rand.nextInt(tempList.size());
                    newList.add(tempList.get(randomIndex));
//                    System.out.println(i + 1 + ". " + tempList.get(randomIndex));
                    output += (i + 1 + ". " +tempList.get(randomIndex) + "\n");
                    tempList.remove(randomIndex);
                }
                System.out.println(newList);
                messageCreateEvent.getChannel().sendMessage(
                        new EmbedBuilder()
                                .setTitle("Talking Ben's List")
                                .setDescription(output)
                                .setThumbnail("https://cdn.discordapp.com/attachments/938298237142564904/949583664931557396/yguyg.PNG")
                                .setFooter("Generated by " + messageCreateEvent.getMessageAuthor().getDisplayName())
                );
            }
        }
    }
}
